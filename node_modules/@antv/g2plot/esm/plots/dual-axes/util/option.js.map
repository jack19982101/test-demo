{"version":3,"file":"option.js","sourceRoot":"","sources":["../../../../src/plots/dual-axes/util/option.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAGL,gBAAgB,EAEhB,QAAQ,GAET,MAAM,UAAU,CAAC;AAElB;;GAEG;AACH,MAAM,UAAU,MAAM,CAAC,cAA8B;IACnD,OAAO,cAAc,IAAI,cAAc,CAAC,QAAQ,IAAI,cAAc,CAAC,QAAQ,KAAK,gBAAgB,CAAC,IAAI,CAAC;AACxG,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,QAAQ,CAAC,cAA8B;IACrD,OAAO,cAAc,IAAI,cAAc,CAAC,QAAQ,IAAI,cAAc,CAAC,QAAQ,KAAK,gBAAgB,CAAC,MAAM,CAAC;AAC1G,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,iBAAiB,CAAC,cAA8B,EAAE,IAAc;IAC9E,sBAAsB;IACtB,IAAI,QAAQ,CAAC,cAAc,CAAC,EAAE;QAC5B,OAAO,OAAO,CACZ,EAAE,EACF;YACE,QAAQ,EAAE,gBAAgB,CAAC,MAAM;YACjC,gBAAgB,EAAE,GAAG;SACtB,EACD,cAAc,CACf,CAAC;KACH;IAED,uBAAuB;IACvB,OAAO,OAAO,CACZ;QACE,KAAK,EAAE,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;KACtD,EACD;QACE,QAAQ,EAAE,gBAAgB,CAAC,IAAI;QAC/B,YAAY,EAAE,IAAI;QAClB,MAAM,EAAE,KAAK;KACd,EACD,cAAc,IAAI,EAAE,CACrB,CAAC;AACJ,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,SAAS,CAAC,OAAwB;IACxC,IAAA,KAAqC,OAAO,MAAlC,EAAV,KAAK,mBAAG,EAAE,KAAA,EAAE,KAAyB,OAAO,gBAAZ,EAApB,eAAe,mBAAG,EAAE,KAAA,CAAa;IAErD,IAAM,oBAAoB,GAAG;QAC3B,IAAI,EAAE,IAAI;QACV,KAAK,EAAE;YACL,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,KAAK;SAClB;KACF,CAAC;IAEF,IAAM,aAAa,GAAG,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE;QACzC,KAAK,EAAE;YACL,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;YACxE,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;SACzE;QACD,eAAe,EAAE;YACf,iBAAiB,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC;YACpD,iBAAiB,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC;SACtD;KACF,CAAC,CAAC;IAEH,OAAO,aAAa,CAAC;AACvB,CAAC","sourcesContent":["import { deepMix } from '@antv/util';\nimport {\n  DualAxesOptions,\n  GeometryOption,\n  DualAxesGeometry,\n  GeometryLineOption,\n  AxisType,\n  GeometryColumnOption,\n} from '../types';\n\n/**\n * 根据 GeometryOption 判断 geometry 是否为 line\n */\nexport function isLine(geometryOption: GeometryOption): geometryOption is GeometryLineOption {\n  return geometryOption && geometryOption.geometry && geometryOption.geometry === DualAxesGeometry.Line;\n}\n\n/**\n * 根据 GeometryOption 判断 geometry 是否为 Column\n */\nexport function isColumn(geometryOption: GeometryOption): geometryOption is GeometryColumnOption {\n  return geometryOption && geometryOption.geometry && geometryOption.geometry === DualAxesGeometry.Column;\n}\n\n/**\n * 获取 GeometryOption\n * @param geometryOption\n * @param axis\n */\nexport function getGeometryOption(geometryOption: GeometryOption, axis: AxisType): GeometryOption {\n  // 柱子默认设置，柱子颜色使用 g2 设置\n  if (isColumn(geometryOption)) {\n    return deepMix(\n      {},\n      {\n        geometry: DualAxesGeometry.Column,\n        columnWidthRatio: 0.5,\n      },\n      geometryOption\n    );\n  }\n\n  // 线默认设置，默认为线，线颜色默认左蓝右红\n  return deepMix(\n    {\n      color: axis === AxisType.Left ? '#5B8FF9' : '#E76C5E',\n    },\n    {\n      geometry: DualAxesGeometry.Line,\n      connectNulls: true,\n      smooth: false,\n    },\n    geometryOption || {}\n  );\n}\n\n/**\n * 获取 Option\n * @param options\n */\nexport function getOption(options: DualAxesOptions): DualAxesOptions {\n  const { yAxis = [], geometryOptions = [] } = options;\n\n  const DEFAULT_YAXIS_CONFIG = {\n    nice: true,\n    label: {\n      autoHide: true,\n      autoRotate: false,\n    },\n  };\n\n  const formatOptions = deepMix({}, options, {\n    yAxis: [\n      yAxis[0] !== false ? deepMix({}, DEFAULT_YAXIS_CONFIG, yAxis[0]) : false,\n      yAxis[1] !== false ? deepMix({}, DEFAULT_YAXIS_CONFIG, yAxis[1]) : false,\n    ],\n    geometryOptions: [\n      getGeometryOption(geometryOptions[0], AxisType.Left),\n      getGeometryOption(geometryOptions[1], AxisType.Right),\n    ],\n  });\n\n  return formatOptions;\n}\n"]}