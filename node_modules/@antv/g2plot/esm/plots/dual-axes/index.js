import { __extends } from "tslib";
import { deepMix } from '@antv/util';
import { Plot } from '../../core/plot';
import { DualAxesGeometry } from './types';
import { adaptor } from './adaptor';
var DualAxes = /** @class */ (function (_super) {
    __extends(DualAxes, _super);
    function DualAxes() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 图表类型: 双轴图 */
        _this.type = 'dual-axes';
        return _this;
    }
    /**
     * 获取 双轴图 默认配置
     */
    DualAxes.prototype.getDefaultOptions = function (options) {
        var _a;
        var _b = options.geometryOptions, geometryOptions = _b === void 0 ? [] : _b, xField = options.xField, data = options.data;
        var columnIndex = geometryOptions.findIndex(function (geometryOption) { return geometryOption && geometryOption.geometry === DualAxesGeometry.Column; });
        var defaultXFieldMeta = {};
        if (columnIndex > -1) {
            var columnData = data[columnIndex];
            defaultXFieldMeta = {
                range: [1 / columnData.length / 2, 1 - 1 / columnData.length / 2],
            };
        }
        var defaultInteraction = [{ type: 'legend-visible-filter' }];
        return deepMix({}, _super.prototype.getDefaultOptions.call(this), {
            meta: (_a = {},
                _a[xField] = defaultXFieldMeta,
                _a),
            tooltip: {
                showMarkers: false,
                // 存在柱状图，不显示 crosshairs
                showCrosshairs: columnIndex > -1,
                shared: true,
                crosshairs: {
                    type: 'x',
                },
            },
            interactions: columnIndex > -1 ? defaultInteraction.concat({ type: 'active-region' }) : defaultInteraction,
            syncViewPadding: true,
        });
    };
    /**
     * 获取双轴图的适配器
     */
    DualAxes.prototype.getSchemaAdaptor = function () {
        return adaptor;
    };
    return DualAxes;
}(Plot));
export { DualAxes };
//# sourceMappingURL=index.js.map