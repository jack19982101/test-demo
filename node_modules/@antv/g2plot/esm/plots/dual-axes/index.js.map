{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/plots/dual-axes/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAEvC,OAAO,EAAmB,gBAAgB,EAAE,MAAM,SAAS,CAAC;AAC5D,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAIpC;IAA8B,4BAAqB;IAAnD;QAAA,qEA+CC;QA9CC,gBAAgB;QACT,UAAI,GAAW,WAAW,CAAC;;IA6CpC,CAAC;IA3CC;;OAEG;IACO,oCAAiB,GAA3B,UAA4B,OAAO;;QACzB,IAAA,KAAuC,OAAO,gBAA1B,EAApB,eAAe,mBAAG,EAAE,KAAA,EAAE,MAAM,GAAW,OAAO,OAAlB,EAAE,IAAI,GAAK,OAAO,KAAZ,CAAa;QACvD,IAAM,WAAW,GAAG,eAAe,CAAC,SAAS,CAC3C,UAAC,cAAc,IAAK,OAAA,cAAc,IAAI,cAAc,CAAC,QAAQ,KAAK,gBAAgB,CAAC,MAAM,EAArE,CAAqE,CAC1F,CAAC;QAEF,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAC3B,IAAI,WAAW,GAAG,CAAC,CAAC,EAAE;YACpB,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YACrC,iBAAiB,GAAG;gBAClB,KAAK,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;aAClE,CAAC;SACH;QAED,IAAM,kBAAkB,GAAG,CAAC,EAAE,IAAI,EAAE,uBAAuB,EAAE,CAAC,CAAC;QAE/D,OAAO,OAAO,CAAC,EAAE,EAAE,iBAAM,iBAAiB,WAAE,EAAE;YAC5C,IAAI;gBACF,GAAC,MAAM,IAAG,iBAAiB;mBAC5B;YACD,OAAO,EAAE;gBACP,WAAW,EAAE,KAAK;gBAClB,uBAAuB;gBACvB,cAAc,EAAE,WAAW,GAAG,CAAC,CAAC;gBAChC,MAAM,EAAE,IAAI;gBACZ,UAAU,EAAE;oBACV,IAAI,EAAE,GAAG;iBACV;aACF;YACD,YAAY,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;YAC1G,eAAe,EAAE,IAAI;SACtB,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACO,mCAAgB,GAA1B;QACE,OAAO,OAAO,CAAC;IACjB,CAAC;IACH,eAAC;AAAD,CAAC,AA/CD,CAA8B,IAAI,GA+CjC","sourcesContent":["import { deepMix } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { DualAxesOptions, DualAxesGeometry } from './types';\nimport { adaptor } from './adaptor';\n\nexport { DualAxesOptions };\n\nexport class DualAxes extends Plot<DualAxesOptions> {\n  /** 图表类型: 双轴图 */\n  public type: string = 'dual-axes';\n\n  /**\n   * 获取 双轴图 默认配置\n   */\n  protected getDefaultOptions(options) {\n    const { geometryOptions = [], xField, data } = options;\n    const columnIndex = geometryOptions.findIndex(\n      (geometryOption) => geometryOption && geometryOption.geometry === DualAxesGeometry.Column\n    );\n\n    let defaultXFieldMeta = {};\n    if (columnIndex > -1) {\n      const columnData = data[columnIndex];\n      defaultXFieldMeta = {\n        range: [1 / columnData.length / 2, 1 - 1 / columnData.length / 2],\n      };\n    }\n\n    const defaultInteraction = [{ type: 'legend-visible-filter' }];\n\n    return deepMix({}, super.getDefaultOptions(), {\n      meta: {\n        [xField]: defaultXFieldMeta,\n      },\n      tooltip: {\n        showMarkers: false,\n        // 存在柱状图，不显示 crosshairs\n        showCrosshairs: columnIndex > -1,\n        shared: true,\n        crosshairs: {\n          type: 'x',\n        },\n      },\n      interactions: columnIndex > -1 ? defaultInteraction.concat({ type: 'active-region' }) : defaultInteraction,\n      syncViewPadding: true,\n    });\n  }\n\n  /**\n   * 获取双轴图的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<DualAxesOptions> {\n    return adaptor;\n  }\n}\n"]}