{"version":3,"file":"basic.js","sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/basic.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, map } from '@antv/util';\nimport { isFunction } from '@antv/util';\nimport { flow, findGeometry } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { FunnelAdaptorOptions } from '../types';\nimport { FUNNEL_PERCENT } from '../constant';\nimport { transpose } from './util';\n\n/**\n * 处理数据\n * @param params\n */\nfunction format(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { options } = params;\n  const { data = [], yField } = options;\n  let formatData = [];\n  // format 数据\n  if (data[0][yField]) {\n    formatData = map(data, (row) => {\n      if (row[yField] !== undefined) {\n        row[FUNNEL_PERCENT] = row[yField] / data[0][yField];\n      }\n      return row;\n    });\n  }\n\n  return deepMix({}, params, {\n    options: {\n      formatData,\n    },\n  });\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { chart, options } = params;\n  const { formatData = [], xField, yField, color } = options;\n\n  // 绘制漏斗图\n  chart.data(formatData);\n  chart\n    .interval()\n    .adjust('symmetric')\n    .position(`${xField}*${yField}*${FUNNEL_PERCENT}`)\n    .shape('funnel')\n    .color(xField, color);\n\n  return params;\n}\n\n/**\n * label 处理\n * @param params\n */\nfunction label(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { chart, options } = params;\n  const { label, yField, xField } = options;\n\n  const geometry = findGeometry(chart, 'interval');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [xField, yField, FUNNEL_PERCENT],\n      callback,\n      cfg,\n    });\n  }\n\n  return params;\n}\n\n/**\n * annotation 处理\n * @param params\n */\nfunction annotation(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { chart, options } = params;\n  const { formatData = [], xField, yField, annotation } = options;\n\n  if (annotation !== false) {\n    formatData.forEach((obj) => {\n      chart.annotation().text({\n        top: true,\n        position: [obj[xField], 'median'],\n        content: isFunction(annotation) ? annotation(obj[xField], obj[yField], obj[FUNNEL_PERCENT], obj) : annotation,\n        style: {\n          stroke: null,\n          fill: '#fff',\n          textAlign: 'center',\n        },\n      });\n    });\n  }\n  return params;\n}\n\n/**\n * 基础漏斗\n * @param chart\n * @param options\n */\nexport function basicFunnel(params: Params<FunnelAdaptorOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(format, geometry, transpose, label, annotation)(params);\n}\n"]}