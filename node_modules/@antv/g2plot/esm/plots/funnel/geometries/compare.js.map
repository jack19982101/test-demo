{"version":3,"file":"compare.js","sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/compare.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, map } from '@antv/util';\nimport { flow } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { FunnelAdaptorOptions } from '../types';\nimport { FUNNEL_PERCENT } from '../constant';\n\n/**\n * 处理数据\n * @param params\n */\nfunction format(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { options } = params;\n  const { data = [], yField, compareField } = options;\n\n  let formatData = [];\n  if (data[0][yField]) {\n    // format 数据\n    const firstRecord = {};\n    formatData = map(data, (row) => {\n      if (row[yField] !== undefined && row[compareField]) {\n        if (!firstRecord[row[compareField]]) {\n          firstRecord[row[compareField]] = row[yField];\n        }\n        row[FUNNEL_PERCENT] = row[yField] / firstRecord[row[compareField]];\n      }\n      return row;\n    });\n  }\n\n  return deepMix({}, params, {\n    options: {\n      formatData,\n    },\n  });\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { chart, options } = params;\n  const { formatData = [], xField, yField, color, compareField, label, transpose } = options;\n\n  // 绘制漏斗图\n  chart.data(formatData);\n\n  chart.scale({\n    [yField]: {\n      sync: true,\n    },\n  });\n\n  chart.facet('mirror', {\n    fields: [compareField, null],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !transpose,\n    padding: 0,\n    eachView(view, facet) {\n      if (!transpose) {\n        // 垂直布局\n        view\n          .coordinate('rect')\n          .transpose()\n          .scale(facet.columnIndex === 0 ? -1 : 1, -1);\n      }\n      // 绘制图形\n      const funnelGeometry = view\n        .interval()\n        .position(`${xField}*${yField}*${FUNNEL_PERCENT}`)\n        .shape('funnel')\n        .color(xField, color)\n        .style({\n          lineWidth: 1,\n          stroke: '#fff',\n        });\n\n      // 对比漏斗图中，使用分面无法同步获取到 chart.views，因此 label 和 annotation 不做拆分，逻辑直接写在下方\n\n      // 绘制 label\n      if (!label) {\n        funnelGeometry.label(false);\n      } else {\n        const { callback, ...cfg } = label;\n        funnelGeometry.label({\n          fields: [xField, yField, FUNNEL_PERCENT],\n          callback,\n          cfg,\n        });\n      }\n\n      // 绘制 annotation\n      formatData.map((obj) => {\n        if (obj[compareField] === facet.columnValue) {\n          view.annotation().text({\n            top: true,\n            position: [obj[xField], 'min'],\n            content: obj[yField],\n            style: {\n              fill: '#fff',\n              stroke: null,\n              fontSize: 12,\n              textAlign: facet.columnIndex ? 'start' : 'end',\n            },\n            offsetX: facet.columnIndex ? 10 : -10,\n          });\n        }\n        return null;\n      });\n    },\n  });\n\n  return params;\n}\n\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function compareFunnel(params: Params<FunnelAdaptorOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(format, geometry)(params);\n}\n"]}