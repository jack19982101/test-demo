import { __rest } from "tslib";
import { deepMix, map, reduce } from '@antv/util';
import { isFunction } from '@antv/util';
import { flow, findGeometry } from '../../../utils';
import { FUNNEL_PERCENT, FUNNEL_TOTAL_PERCENT } from '../constant';
/**
 * 动态高度漏斗图
 * @param params
 * 需求: 每个漏斗项的高度根据 yfield 等比生成。漏斗上下宽度比为2，即斜率为 2。
 * 实现方式: 使用 g2 多边形，data -> 点坐标 -> 绘制
 * 以漏斗底部中心点为坐标轴原点，漏斗在 -0.5 <= x <= 0.5, 0 <= y <= 1 的正方形中绘制
 * 先计算第一象限的点, 第二象限的点即为镜像 x 轴取反。
 * 第一象限共需计算 data.length + 1 个点，在 y = 4x - 1 上。首尾分别是[0.5, 1], [0.25, 0]。根据 data 计算出 y 值，从而得到 y 值
 */
/**
 * 处理数据
 * @param params
 */
function format(params) {
    var options = params.options;
    var _a = options.data, data = _a === void 0 ? [] : _a, yField = options.yField;
    // 计算各数据项所占高度
    var sum = reduce(data, function (total, item) {
        return total + item[yField];
    }, 0);
    var formatData = map(data, function (row, index) {
        // 储存四个点 x，y 坐标，方向为顺时针，即 [左上, 右上，右下，左下]
        var x = [];
        var y = [];
        row[FUNNEL_TOTAL_PERCENT] = row[yField] / sum;
        // 获取左上角，右上角坐标
        if (index) {
            var _a = data[index - 1], preItemX = _a._x, preItemY = _a._y;
            x[0] = preItemX[3];
            y[0] = preItemY[3];
            x[1] = preItemX[2];
            y[1] = preItemY[2];
        }
        else {
            x[0] = -0.5;
            y[0] = 1;
            x[1] = 0.5;
            y[1] = 1;
        }
        // 获取右下角坐标
        y[2] = y[1] - row[FUNNEL_TOTAL_PERCENT];
        x[2] = (y[2] + 1) / 4;
        y[3] = y[2];
        x[3] = -x[2];
        // 赋值
        row._x = x;
        row._y = y;
        row[FUNNEL_PERCENT] = row[yField] / data[0][yField];
        return row;
    });
    return deepMix({}, params, {
        options: {
            formatData: formatData,
        },
    });
}
/**
 * geometry处理
 * @param params
 */
function geometry(params) {
    var chart = params.chart, options = params.options;
    var _a = options.formatData, formatData = _a === void 0 ? [] : _a, xField = options.xField, color = options.color;
    // 绘制漏斗图
    chart.data(formatData);
    chart.polygon().position('_x*_y').color(xField, color);
    return params;
}
function label(params) {
    var chart = params.chart, options = params.options;
    var label = options.label, yField = options.yField, xField = options.xField;
    var geometry = findGeometry(chart, 'polygon');
    if (!label) {
        geometry.label(false);
    }
    else {
        var callback = label.callback, cfg = __rest(label, ["callback"]);
        geometry.label({
            fields: [xField, yField, FUNNEL_PERCENT],
            callback: callback,
            cfg: cfg,
        });
    }
    return params;
}
function annotation(params) {
    var chart = params.chart, options = params.options;
    var _a = options.formatData, formatData = _a === void 0 ? [] : _a, xField = options.xField, yField = options.yField, annotation = options.annotation;
    if (annotation !== false) {
        formatData.forEach(function (obj) {
            chart.annotation().text({
                top: true,
                position: [obj[xField], 'median'],
                content: isFunction(annotation) ? annotation(obj[xField], obj[yField], obj[FUNNEL_PERCENT], obj) : annotation,
                style: {
                    stroke: null,
                    fill: '#fff',
                    textAlign: 'center',
                },
            });
        });
    }
    return params;
}
/**
 * 对比漏斗
 * @param chart
 * @param options
 */
export function dynamicHeightFunnel(params) {
    // flow 的方式处理所有的配置到 G2 API
    return flow(format, geometry, label, annotation)(params);
}
//# sourceMappingURL=dynamic-height.js.map