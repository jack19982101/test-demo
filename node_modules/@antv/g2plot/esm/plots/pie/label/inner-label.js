import { __extends } from "tslib";
import { getGeometryLabel } from '@antv/g2';
import { deepMix, isNil, isString } from '@antv/util';
import { parsePercentageToNumber } from '../utils';
var PieLabel = getGeometryLabel('pie');
var PieInnerLabel = /** @class */ (function (_super) {
    __extends(PieInnerLabel, _super);
    function PieInnerLabel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultLayout = 'pie-inner';
        return _this;
    }
    /**
     * 获取 label 的默认配置
     * - 饼图 inner-label 强制不显示 label 牵引线
     */
    PieInnerLabel.prototype.getDefaultLabelCfg = function () {
        var cfg = _super.prototype.getDefaultLabelCfg.call(this);
        return deepMix({}, cfg, { labelLine: false });
    };
    /**
     * 获取标签 offset距离（默认 -30% ）
     * todo G2 offset 允许百分比设置后，移除 ts-ignore
     */
    // @ts-ignore
    PieInnerLabel.prototype.getDefaultOffset = function (offset) {
        var coordinate = this.getCoordinate();
        var radius = coordinate.getRadius();
        var innerRadius = 0;
        var actualOffset = offset;
        if (isString(actualOffset)) {
            // 存在 innerRadius
            if (coordinate.innerRadius) {
                innerRadius = radius * (coordinate.innerRadius / coordinate.radius);
                actualOffset = (radius - innerRadius) * (parsePercentageToNumber(actualOffset) + (coordinate.radius - 1));
            }
            else {
                actualOffset = radius * parsePercentageToNumber(actualOffset);
            }
        }
        return isNil(actualOffset) || actualOffset > 0 ? -(radius - innerRadius) * 0.3 : actualOffset;
    };
    return PieInnerLabel;
}(PieLabel));
export { PieInnerLabel };
//# sourceMappingURL=inner-label.js.map