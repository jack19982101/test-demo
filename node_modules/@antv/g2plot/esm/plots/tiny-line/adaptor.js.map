{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/tiny-line/adaptor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAErC,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AACpF,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AAGvD;;;GAGG;AACH,SAAS,QAAQ,CAAC,MAA+B;IACvC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,IAAI,GAA4C,OAAO,KAAnD,EAAE,KAAK,GAAqC,OAAO,MAA5C,EAAE,SAAS,GAA0B,OAAO,UAAjC,EAAS,YAAY,GAAK,OAAO,MAAZ,CAAa;IAEhE,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,CAAS,EAAE,CAAS;QAC/C,OAAO,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAEvB,mBAAmB;IACnB,IAAM,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE;QAC5B,OAAO,EAAE;YACP,MAAM,EAAE,GAAG;YACX,MAAM,EAAE,GAAG;YACX,IAAI,EAAE;gBACJ,KAAK,OAAA;gBACL,KAAK,EAAE,SAAS;aACjB;YACD,KAAK,EAAE,YAAY;SACpB;KACF,CAAC,CAAC;IAEH,IAAI,CAAC,CAAC,CAAC,CAAC;IACR,KAAK,CAAC,CAAC,CAAC,CAAC;IAET,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAEpB,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,OAAO,CAAC,MAA+B;IACrD,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AACpF,CAAC","sourcesContent":["import { deepMix } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { flow } from '../../utils';\nimport { scale, theme, animation, annotation, tooltip } from '../../adaptor/common';\nimport { line, point } from '../../adaptor/geometries';\nimport { TinyLineOptions } from './types';\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<TinyLineOptions>): Params<TinyLineOptions> {\n  const { chart, options } = params;\n  const { data, color, lineStyle, point: pointMapping } = options;\n\n  const seriesData = data.map((y: number, x: number) => {\n    return { x, y };\n  });\n\n  chart.data(seriesData);\n\n  // line geometry 处理\n  const p = deepMix({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      line: {\n        color,\n        style: lineStyle,\n      },\n      point: pointMapping,\n    },\n  });\n\n  line(p);\n  point(p);\n\n  chart.axis(false);\n  chart.legend(false);\n\n  return params;\n}\n\n/**\n * 迷你折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TinyLineOptions>) {\n  return flow(geometry, scale({}), theme, tooltip, animation, annotation())(params);\n}\n"]}