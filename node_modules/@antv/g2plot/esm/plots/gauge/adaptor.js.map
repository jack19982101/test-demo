{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/gauge/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { isString, isArray, isFunction } from '@antv/util';\nimport { interaction, animation, theme, scale } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { Data } from '../../types';\nimport { flow } from '../../utils';\nimport { RANGE_TYPE, RANGE_VALUE, PERCENT, DEFAULT_COLOR } from './constant';\nimport { GaugeOptions } from './types';\nimport { processRangeData } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<GaugeOptions>): Params<GaugeOptions> {\n  const { chart, options } = params;\n  const { percent, range, radius, innerRadius, startAngle, endAngle, axis, indicator } = options;\n  const { ticks, color } = range;\n\n  // 指标 & 指针\n  const indicatorData = [{ [PERCENT]: percent }];\n  const v1 = chart.createView();\n  v1.data(indicatorData);\n\n  v1.point()\n    .position(`${PERCENT}*1`)\n    .shape('gauge-indicator')\n    // 传入指针的样式到自定义 shape 中\n    .customInfo({\n      indicator,\n    });\n\n  v1.coordinate('polar', {\n    startAngle,\n    endAngle,\n    radius: innerRadius * radius, // 外部的 innerRadius * radius = 这里的 radius\n  });\n\n  v1.axis(PERCENT, axis);\n\n  // 辅助 range\n  // [{ range: 1, type: '0' }]\n  const rangeData: Data = processRangeData(ticks as number[]);\n  const v2 = chart.createView();\n  v2.data(rangeData);\n\n  const rangeColor = isString(color) ? [color, DEFAULT_COLOR] : isArray(color) ? color.concat(DEFAULT_COLOR) : color;\n\n  v2.interval().position(`1*${RANGE_VALUE}`).color(RANGE_TYPE, rangeColor).adjust('stack');\n\n  v2.coordinate('polar', {\n    innerRadius,\n    radius,\n    startAngle,\n    endAngle,\n  }).transpose();\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<GaugeOptions>): Params<GaugeOptions> {\n  return flow(\n    scale({\n      range: {\n        min: 0,\n        max: 1,\n        maxLimit: 1,\n        minLimit: 0,\n      },\n    })\n  )(params);\n}\n\n/**\n * 统计指标文档\n * @param params\n */\nfunction statistic(params: Params<GaugeOptions>): Params<GaugeOptions> {\n  const { chart, options } = params;\n  const { statistic, percent } = options;\n\n  const { title, content } = statistic;\n\n  // annotation title 和 content 分别使用一个 text\n  [title, content].forEach((annotation) => {\n    if (annotation) {\n      const { formatter, style, offsetX, offsetY, rotate } = annotation;\n      chart.annotation().text({\n        top: true,\n        position: ['50%', '100%'],\n        content: isFunction(formatter) ? formatter({ percent }) : `${percent}`,\n        style: isFunction(style) ? style({ percent }) : style,\n        offsetX,\n        offsetY,\n        rotate,\n      });\n    }\n  });\n\n  return params;\n}\n\n/**\n * other 配置\n * @param params\n */\nfunction other(params: Params<GaugeOptions>): Params<GaugeOptions> {\n  const { chart } = params;\n\n  chart.legend(false);\n  chart.tooltip(false);\n\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<GaugeOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    geometry,\n    meta,\n    statistic,\n    interaction,\n    animation,\n    theme,\n    other\n    // ... 其他的 adaptor flow\n  )(params);\n}\n"]}