{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/sunburst/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { polygon as polygonAdaptor } from '../../adaptor/geometries';\nimport { tooltip, interaction, animation, theme, annotation } from '../../adaptor/common';\nimport { flow, findGeometry } from '../../utils';\nimport { transformData } from './utils';\nimport { SunburstOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { color, colorField, sunburstStyle } = options;\n  const data = transformData(options);\n  chart.data(data);\n\n  // geometry\n  polygonAdaptor(\n    deepMix({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        polygon: {\n          color,\n          style: sunburstStyle,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart } = params;\n  chart.legend(false);\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { label, seriesField } = options;\n\n  const geometry = findGeometry(chart, 'polygon');\n\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [seriesField],\n      callback,\n      cfg,\n    });\n  }\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { innerRadius, radius, reflect } = options;\n\n  const coord = chart.coordinate({\n    type: 'polar',\n    cfg: {\n      innerRadius,\n      radius,\n    },\n  });\n  if (reflect) {\n    coord.reflect(reflect);\n  }\n\n  return params;\n}\n\n/**\n * scale 配置\n * @param params\n */\nfunction scale(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { meta } = options;\n\n  if (meta) {\n    chart.scale(meta);\n  }\n\n  return params;\n}\n\n/**\n * 旭日图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<SunburstOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    geometry,\n    theme,\n    axis,\n    scale,\n    legend,\n    coordinate,\n    tooltip,\n    label,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"]}