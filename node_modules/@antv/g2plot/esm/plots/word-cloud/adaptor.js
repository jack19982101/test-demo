import { tooltip, interaction, animation, theme, scale, state } from '../../adaptor/common';
import { flow, findGeometry } from '../../utils';
import { transform } from './utils';
/**
 * geometry 配置处理
 * @param params
 */
function geometry(params) {
    var chart = params.chart;
    var data = transform(params);
    chart.data(data);
    chart.point().position('x*y').shape('word-cloud');
    return params;
}
/**
 * color 配置处理
 * @param params
 */
function color(params) {
    var chart = params.chart, options = params.options;
    var wordField = options.wordField, color = options.color;
    var geometry = findGeometry(chart, 'point');
    geometry.color(wordField, color);
    return params;
}
/**
 * meta 配置
 * @param params
 */
function meta(params) {
    return flow(scale({
        x: { nice: false },
        y: { nice: false },
    }))(params);
}
/**
 * coord 配置
 * @param params
 */
function coord(params) {
    var chart = params.chart;
    chart.coordinate().reflect('y');
    return params;
}
/**
 * axis 配置
 * 词云图不显示轴信息
 * @param params
 */
function axis(params) {
    var chart = params.chart;
    chart.axis(false);
    return params;
}
/**
 * label 配置
 * 词云图不显示 label 信息
 * @param params
 */
function label(params) {
    var chart = params.chart;
    var geometry = findGeometry(chart, 'point');
    geometry.label(false);
    return params;
}
/**
 * legend 配置
 * 词云图不显示 legend 信息
 * @param params
 */
function legend(params) {
    var chart = params.chart;
    chart.legend(false);
    return params;
}
/**
 * 词云图适配器
 * @param chart
 * @param options
 */
export function adaptor(params) {
    // flow 的方式处理所有的配置到 G2 API
    flow(geometry, meta, coord, axis, label, color, legend, tooltip, interaction, animation, theme, state)(params);
}
//# sourceMappingURL=adaptor.js.map