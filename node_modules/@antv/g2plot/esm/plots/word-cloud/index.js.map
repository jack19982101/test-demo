{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/plots/word-cloud/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAGvC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,gBAAgB,EAAE,MAAM,SAAS,CAAC;AAC3C,WAAW;AACX,OAAO,qBAAqB,CAAC;AAI7B;IAA+B,6BAAsB;IAArD;QAAA,qEAqEC;QApEC,UAAU;QACH,UAAI,GAAW,YAAY,CAAC;;IAmErC,CAAC;IAjEC;;OAEG;IACO,qCAAiB,GAA3B;QACE,OAAO,OAAO,CAAC,EAAE,EAAE,iBAAM,iBAAiB,WAAE,EAAE;YAC5C,YAAY,EAAE,IAAI;YAClB,OAAO,EAAE;gBACP,SAAS,EAAE,KAAK;gBAChB,WAAW,EAAE,KAAK;gBAClB,cAAc,EAAE,KAAK;aACtB;YACD,SAAS,EAAE;gBACT,UAAU,EAAE,SAAS;gBACrB,UAAU,EAAE,QAAQ;gBACpB,OAAO,EAAE,CAAC;gBACV,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBAClB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;gBACjB,aAAa,EAAE,CAAC;gBAChB,WAAW,EAAE,GAAG;aACjB;SACF,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACI,0BAAM,GAAb;QAAA,iBAkBC;QAjBS,IAAA,SAAS,GAAK,IAAI,CAAC,OAAO,UAAjB,CAAkB;QAEnC,IAAI,CAAC,SAAS,EAAE;YACd,WAAW;YACX,iBAAM,MAAM,WAAE,CAAC;YACf,OAAO;SACR;QAED,gBAAgB,CAAC,SAAS,EAAE,UAAC,GAAG;YAC9B,KAAI,CAAC,OAAO,yBACP,KAAI,CAAC,OAAO,KACf,SAAS,EAAE,GAAG,IAAI,IAAI,GACvB,CAAC;YAEF,WAAW;YACX,iBAAM,MAAM,YAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACO,oCAAgB,GAA1B;QACE,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;OAEG;IACO,iCAAa,GAAvB;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACzB,iCAAiC;YACjC,yCAAyC;YACzC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,UAAU;YACV,iBAAM,aAAa,WAAE,CAAC;SACvB;IACH,CAAC;IACH,gBAAC;AAAD,CAAC,AArED,CAA+B,IAAI,GAqElC","sourcesContent":["import { deepMix } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { WordCloudOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { processImageMask } from './utils';\n// 注册的shape\nimport './shapes/word-cloud';\n\nexport { WordCloudOptions };\n\nexport class WordCloud extends Plot<WordCloudOptions> {\n  /** 词云图 */\n  public type: string = 'word-cloud';\n\n  /**\n   * 获取默认的 options 配置项\n   */\n  protected getDefaultOptions(): Partial<WordCloudOptions> {\n    return deepMix({}, super.getDefaultOptions(), {\n      timeInterval: 2000,\n      tooltip: {\n        showTitle: false,\n        showMarkers: false,\n        showCrosshairs: false,\n      },\n      wordStyle: {\n        fontFamily: 'Verdana',\n        fontWeight: 'normal',\n        padding: 1,\n        fontSize: [20, 60],\n        rotation: [0, 90],\n        rotationSteps: 2,\n        rotateRatio: 0.5,\n      },\n    });\n  }\n\n  /**\n   * 覆写父类方法，词云图需要加载图片资源，所以需要异步渲染\n   */\n  public render() {\n    const { imageMask } = this.options;\n\n    if (!imageMask) {\n      // 调用父类渲染函数\n      super.render();\n      return;\n    }\n\n    processImageMask(imageMask, (img) => {\n      this.options = {\n        ...this.options,\n        imageMask: img || null,\n      };\n\n      // 调用父类渲染函数\n      super.render();\n    });\n  }\n\n  /**\n   * 获取 词云图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<WordCloudOptions> {\n    return adaptor;\n  }\n\n  /**\n   * 覆写父类的方法，因为词云图使用 data-set 进行布局，原理上有些不一样\n   */\n  protected triggerResize() {\n    if (!this.chart.destroyed) {\n      // 当整个词云图图表的宽高信息发生变化时，每个词语的坐标需要重新\n      // 交给 data-set 进行计算，不然会出现布局错乱，如相邻词语重叠的情况。\n      this.execAdaptor();\n      // 执行父类的方法\n      super.triggerResize();\n    }\n  }\n}\n"]}