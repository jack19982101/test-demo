{"version":3,"file":"word-cloud.js","sourceRoot":"","sources":["../../../../src/plots/word-cloud/shapes/word-cloud.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAO/C,aAAa,CAAC,OAAO,EAAE,YAAY,EAAE;IACnC,IAAI,EAAJ,UAAK,GAAW,EAAE,KAAa;QAC7B,IAAM,EAAE,GAAG,GAAG,CAAC,CAAW,CAAC;QAC3B,IAAM,EAAE,GAAG,GAAG,CAAC,CAAW,CAAC;QAE3B,IAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;YACnC,KAAK,wBACA,YAAY,CAAC,GAAG,CAAC,KACpB,CAAC,EAAE,EAAE,EACL,CAAC,EAAE,EAAE,GACN;SACF,CAAC,CAAC;QACH,IAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;SAC9C;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF,CAAC,CAAC;AAEH,SAAS,YAAY,CAAC,GAAW;;IAC/B,sCACK,GAAG,CAAC,YAAY,GAChB,GAAG,CAAC,KAAK,KACZ,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EACvB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EACnB,SAAS,EAAE,QAAQ,EACnB,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EACzB,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,EAC3B,IAAI,EAAE,GAAG,CAAC,KAAK,WAAI,GAAG,CAAC,YAAY,0CAAE,MAAM,CAAA,EAC3C,YAAY,EAAE,YAAY,IAC1B;AACJ,CAAC","sourcesContent":["import { registerShape, Util } from '@antv/g2';\nimport { ShapeInfo } from '@antv/g2/lib/interface';\nimport { IGroup, ShapeAttrs } from '@antv/g2/lib/dependents';\nimport { DataItem } from '../types';\n\ntype Config = ShapeInfo & { data: DataItem };\n\nregisterShape('point', 'word-cloud', {\n  draw(cfg: Config, group: IGroup) {\n    const cx = cfg.x as number;\n    const cy = cfg.y as number;\n\n    const shape = group.addShape('text', {\n      attrs: {\n        ...getTextAttrs(cfg),\n        x: cx,\n        y: cy,\n      },\n    });\n    const rotate = cfg.data.rotate;\n    if (rotate) {\n      Util.rotate(shape, (rotate * Math.PI) / 180);\n    }\n\n    return shape;\n  },\n});\n\nfunction getTextAttrs(cfg: Config): ShapeAttrs {\n  return {\n    ...cfg.defaultStyle,\n    ...cfg.style,\n    fontSize: cfg.data.size,\n    text: cfg.data.text,\n    textAlign: 'center',\n    fontFamily: cfg.data.font,\n    fontWeight: cfg.data.weight,\n    fill: cfg.color || cfg.defaultStyle?.stroke,\n    textBaseline: 'alphabetic',\n  };\n}\n"]}