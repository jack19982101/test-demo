{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/plots/word-cloud/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Chart, View } from '@antv/g2';\r\nimport DataSet from '@antv/data-set';\r\nimport { isArray, isFunction, isNumber, isString } from '@antv/util';\r\nimport { Params } from '../../core/adaptor';\r\nimport { log, LEVEL, getContainerSize } from '../../utils';\r\nimport { DataItem, WordCloudOptions } from './types';\r\n\r\n/**\r\n * 用 DataSet 转换词云图数据\r\n * @param params\r\n */\r\nexport function transform(params: Params<WordCloudOptions>): DataItem[] {\r\n  const { options } = params;\r\n  const { data, imageMask, wordField, weightField, wordStyle, timeInterval } = options;\r\n  if (!data || !data.length) {\r\n    return [];\r\n  }\r\n  const { fontFamily, fontWeight, padding } = wordStyle;\r\n  const dv = new DataSet.View().source(data);\r\n  const range = dv.range(weightField);\r\n\r\n  dv.transform({\r\n    type: 'tag-cloud',\r\n    fields: [wordField, weightField],\r\n    imageMask: imageMask as HTMLImageElement,\r\n    font: fontFamily,\r\n    fontSize: getFontSize(options, range),\r\n    fontWeight: fontWeight,\r\n    // 图表宽高减去 padding 之后的宽高\r\n    size: getSize(params as any),\r\n    padding: padding,\r\n    timeInterval,\r\n    rotate: getRotate(options),\r\n  });\r\n\r\n  return dv.rows;\r\n}\r\n\r\n/**\r\n * 获取最终的实际绘图尺寸：[width, height]\r\n * @param chart\r\n */\r\nfunction getSize(params: Params<WordCloudOptions> & { chart: Chart }): [number, number] {\r\n  const { chart, options } = params;\r\n  const { autoFit = true } = options;\r\n  let { width, height } = chart;\r\n\r\n  // 由于词云图每个词语的坐标都是先通过 DataSet 根据图表宽高计算出来的，\r\n  // 也就是说，如果一开始提供给 DataSet 的宽高信息和最终显示的宽高不相同，\r\n  // 那么就会出现布局错乱的情况，所以这里处理的目的就是让一开始提供给 DataSet 的\r\n  // 宽高信息与最终显示的宽高信息相同，避免显示错乱。\r\n  if (autoFit) {\r\n    const containerSize = getContainerSize(chart.ele);\r\n    width = containerSize.width || 0;\r\n    height = containerSize.height || 0;\r\n  }\r\n\r\n  const [top, right, bottom, left] = resolvePadding(chart);\r\n  const result = [width - (left + right), height - (top + bottom)];\r\n\r\n  return result as [number, number];\r\n}\r\n\r\n/**\r\n * 根据图表的 padding 和 appendPadding 计算出图表的最终 padding\r\n * @param chart\r\n */\r\nfunction resolvePadding(chart: View) {\r\n  const padding = normalPadding(chart.padding);\r\n  const appendPadding = normalPadding(chart.appendPadding);\r\n  const top = padding[0] + appendPadding[0];\r\n  const right = padding[1] + appendPadding[1];\r\n  const bottom = padding[2] + appendPadding[2];\r\n  const left = padding[3] + appendPadding[3];\r\n\r\n  return [top, right, bottom, left];\r\n}\r\n\r\n/**\r\n * 把 padding 转换成统一的数组写法\r\n * @param padding\r\n */\r\nfunction normalPadding(padding: number | number[] | 'auto'): [number, number, number, number] {\r\n  if (isNumber(padding)) {\r\n    return [padding, padding, padding, padding];\r\n  }\r\n  if (isArray(padding)) {\r\n    const length = padding.length;\r\n\r\n    if (length === 1) {\r\n      return [padding[0], padding[0], padding[0], padding[0]];\r\n    }\r\n    if (length === 2) {\r\n      return [padding[0], padding[1], padding[0], padding[1]];\r\n    }\r\n    if (length === 3) {\r\n      return [padding[0], padding[1], padding[2], padding[1]];\r\n    }\r\n    if (length === 4) {\r\n      return padding as [number, number, number, number];\r\n    }\r\n  }\r\n\r\n  return [0, 0, 0, 0];\r\n}\r\n\r\n/**\r\n * 处理 imageMask 可能为 url 字符串的情况\r\n * @param img\r\n * @param callback\r\n */\r\nexport function processImageMask(img: HTMLImageElement | string, callback?: (img?: HTMLImageElement) => void) {\r\n  if (img instanceof HTMLImageElement) {\r\n    callback(img);\r\n    return;\r\n  }\r\n  if (isString(img)) {\r\n    const image = new Image();\r\n    image.crossOrigin = 'anonymous';\r\n    image.src = img;\r\n    image.onload = () => {\r\n      callback(image);\r\n    };\r\n    image.onerror = () => {\r\n      log(LEVEL.ERROR, false, 'image %s load failed !!!', img);\r\n      callback();\r\n    };\r\n    return;\r\n  }\r\n  log(LEVEL.WARN, img === undefined, 'the type of imageMask option must be String or HTMLImageElement.');\r\n  callback();\r\n}\r\n\r\n/**\r\n * 把用户提供的 fontSize 值转换成符合 DataSet 要求的值\r\n * @param options\r\n * @param range\r\n */\r\nfunction getFontSize(options: WordCloudOptions, range: [number, number]) {\r\n  const { fontSize } = options.wordStyle;\r\n  const [min, max] = range;\r\n  if (isFunction(fontSize)) {\r\n    return fontSize;\r\n  }\r\n  if (isArray(fontSize)) {\r\n    const [fMin, fMax] = fontSize;\r\n    return function fontSize({ value }) {\r\n      return ((fMax - fMin) / (max - min)) * (value - min) + fMin;\r\n    };\r\n  }\r\n  return fontSize;\r\n}\r\n\r\n/**\r\n * 把用户提供的关于旋转角度的字段值转换成符合 DataSet 要求的值\r\n * @param options\r\n */\r\nfunction getRotate(options: WordCloudOptions) {\r\n  const { rotateRatio, rotation, rotationSteps } = resolveRotate(options);\r\n  const min = rotation[0];\r\n  const max = rotation[1];\r\n  // 等于 1 时不旋转，所以把每份大小设为 0\r\n  const perSize = rotationSteps === 1 ? 0 : (max - min) / (rotationSteps - 1);\r\n  return function rotate() {\r\n    return Math.ceil(Math.random() * (rotationSteps - 1)) * perSize * isHappen(rotateRatio);\r\n  };\r\n}\r\n\r\n/**\r\n * 根据传入的数字推断是否发生，返回 1 表示发生，0 表示未发生\r\n * @param n 概率值，可以是从 0 到 1 的数字\r\n */\r\nfunction isHappen(n: number): 1 | 0 {\r\n  return Math.random() < n ? 1 : 0;\r\n}\r\n\r\n/**\r\n * 确保值在要求范围内\r\n * @param options\r\n */\r\nfunction resolveRotate(options: WordCloudOptions) {\r\n  let { rotation, rotationSteps, rotateRatio } = options.wordStyle;\r\n  if (!isArray(rotation)) {\r\n    log(LEVEL.WARN, false, 'the rotation option must be an Array in wordStyle option.');\r\n    rotation = [0, 90];\r\n  }\r\n  if (rotationSteps === 0) {\r\n    log(LEVEL.WARN, false, 'the rotationSteps option must be greater than or equal to 1.');\r\n    rotationSteps = 1;\r\n  }\r\n  if (rotateRatio < 0) {\r\n    log(LEVEL.WARN, false, 'the rotateRatio option must be greater than or equal to 0 and less than or equal to 1.');\r\n    rotateRatio = 0;\r\n  }\r\n  if (rotateRatio > 1) {\r\n    log(LEVEL.WARN, false, 'the rotateRatio option must be greater than or equal to 0 and less than or equal to 1.');\r\n    rotateRatio = 1;\r\n  }\r\n  return {\r\n    rotation,\r\n    rotationSteps,\r\n    rotateRatio,\r\n  };\r\n}\r\n"]}