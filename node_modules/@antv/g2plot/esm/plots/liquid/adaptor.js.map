{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/liquid/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Geometry } from '@antv/g2';\nimport { deepMix, isFunction } from '@antv/util';\nimport { interaction, animation, theme, scale } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { flow } from '../../utils';\nimport { interval } from '../../adaptor/geometries';\nimport { LiquidOptions } from './types';\n\nconst CAT_VALUE = 'liquid';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<LiquidOptions>): Params<LiquidOptions> {\n  const { chart, options } = params;\n  const { percent, color, liquidStyle, radius } = options;\n\n  const data = [{ percent, type: CAT_VALUE }];\n\n  chart.scale({\n    percent: {\n      min: 0,\n      max: 1,\n    },\n  });\n\n  chart.data(data);\n\n  const p = deepMix({}, params, {\n    options: {\n      xField: 'type',\n      yField: 'percent',\n      // radius 放到 columnWidthRatio 中。\n      // 保证横向的大小是根据  redius 生成的\n      widthRatio: radius,\n      interval: {\n        color,\n        style: liquidStyle,\n        shape: 'liquid-fill-gauge',\n      },\n    },\n  });\n  const { ext } = interval(p);\n  const geometry = ext.geometry as Geometry;\n\n  // 将 radius 传入到自定义 shape 中\n  geometry.customInfo({\n    radius,\n  });\n\n  // 关闭组件\n  chart.legend(false);\n  chart.axis(false);\n  chart.tooltip(false);\n\n  return params;\n}\n\n/**\n * 统计指标文档\n * @param params\n */\nfunction statistic(params: Params<LiquidOptions>): Params<LiquidOptions> {\n  const { chart, options } = params;\n  const { statistic, percent } = options;\n\n  const { title, content } = statistic;\n\n  // annotation title 和 content 分别使用一个 text\n  [title, content].forEach((annotation) => {\n    if (annotation) {\n      const { formatter, style, offsetX, offsetY, rotate } = annotation;\n      chart.annotation().text({\n        top: true,\n        position: {\n          type: CAT_VALUE,\n          percent: 0.5,\n        },\n        content: isFunction(formatter) ? formatter({ percent }) : `${percent}`,\n        style: isFunction(style) ? style({ percent }) : style,\n        offsetX,\n        offsetY,\n        rotate,\n      });\n    }\n  });\n\n  return params;\n}\n\n/**\n * 水波图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<LiquidOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, statistic, scale({}), animation, theme, interaction)(params);\n}\n"]}