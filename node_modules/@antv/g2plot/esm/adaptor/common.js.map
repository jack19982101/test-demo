{"version":3,"file":"common.js","sourceRoot":"","sources":["../../src/adaptor/common.ts"],"names":[],"mappings":"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","sourcesContent":["import { Geometry } from '@antv/g2';\nimport { each, deepMix } from '@antv/util';\nimport { Params } from '../core/adaptor';\nimport { Options } from '../types';\nimport { Interaction } from '../types/interaction';\nimport { Axis } from '../types/axis';\nimport { AXIS_META_CONFIG_KEYS } from '../constant';\nimport { pick } from '../utils';\n\n/**\n * 通用 legend 配置, 适用于带 colorField 的图表\n * @param params\n */\nexport function legend<O extends Pick<Options, 'legend'> & { colorField?: string }>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { legend, colorField } = options;\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (colorField) {\n    chart.legend(colorField, legend);\n  }\n\n  return params;\n}\n\n/**\n * 通用 tooltip 配置\n * @param params\n */\nexport function tooltip<O extends Pick<Options, 'tooltip'>>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n\n  if (tooltip !== undefined) {\n    chart.tooltip(tooltip);\n  }\n\n  return params;\n}\n\n/**\n * Interaction 配置\n * @param params\n */\nexport function interaction<O extends Pick<Options, 'interactions'>>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { interactions } = options;\n\n  each(interactions, (i: Interaction) => {\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n\n  return params;\n}\n\n/**\n * 动画\n * @param params\n */\nexport function animation<O extends Pick<Options, 'animation'>>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { animation } = options;\n\n  // 所有的 Geometry 都使用同一动画（各个图形如有区别，自行覆盖）\n  each(chart.geometries, (g: Geometry) => {\n    g.animate(animation);\n  });\n\n  return params;\n}\n\n/**\n * 设置全局主题配置\n * @param params\n */\nexport function theme<O extends Pick<Options, 'theme'>>(params: Params<O>): Params<O> {\n  const { chart, options } = params;\n  const { theme } = options;\n\n  // 存在主题才设置主题\n  if (theme) {\n    chart.theme(theme);\n  }\n  return params;\n}\n\n/**\n * 状态 state 配置\n * @param params\n */\nexport function state(params: Params<Options>): Params<Options> {\n  const { chart, options } = params;\n  const { state } = options;\n\n  if (state) {\n    each(chart.geometries, (geometry: Geometry) => {\n      geometry.state(state);\n    });\n  }\n\n  return params;\n}\n\n/**\n * 处理缩略轴的 adaptor\n * @param params\n */\nexport function slider(params: Params<Options>): Params<Options> {\n  const { chart, options } = params;\n  const { slider } = options;\n\n  chart.option('slider', slider);\n\n  return params;\n}\n\n/**\n * 处理缩略轴的 adaptor\n * @param params\n */\nexport function scrollbar(params: Params<Options>): Params<Options> {\n  const { chart, options } = params;\n  const { scrollbar } = options;\n\n  chart.option('scrollbar', scrollbar);\n\n  return params;\n}\n\n/**\n * scale 的 adaptor\n * @param axes\n */\nexport function scale(axes: Record<string, Axis>, meta?: Options['meta']) {\n  return function <O extends Pick<Options, 'meta'>>(params: Params<O>): Params<O> {\n    const { chart, options } = params;\n\n    // 1. 轴配置中的 scale 信息\n    let scales: Record<string, any> = {};\n    each(axes, (axis: Axis, field: string) => {\n      scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n    });\n\n    // 2. meta 直接是 scale 的信息\n    scales = deepMix({}, meta, options.meta, scales);\n\n    chart.scale(scales);\n\n    return params;\n  };\n}\n\n/**\n * annotation 配置\n * @param params\n */\nexport function annotation(annotationOptions?: Options['annotations']) {\n  return function <O extends Pick<Options, 'annotations'>>(params: Params<O>): Params<O> {\n    const { chart, options } = params;\n\n    const annotationController = chart.getController('annotation');\n\n    /** 自定义 annotation */\n    each([...(options.annotations || []), ...(annotationOptions || [])], (annotationOption) => {\n      // @ts-ignore\n      annotationController.annotation(annotationOption);\n    });\n\n    return params;\n  };\n}\n"]}