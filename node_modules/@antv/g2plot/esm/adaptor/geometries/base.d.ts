import { Datum } from '@antv/g2/lib/interface';
import { Params } from '../../core/adaptor';
import { ColorAttr, ShapeAttr, SizeAttr, StyleAttr, Options } from '../../types';
/**
 * 图形映射属性，按照优先级来的
 */
export declare type MappingOptions = {
    /** point color 映射 */
    readonly color?: ColorAttr;
    /** point shape 映射 */
    readonly shape?: ShapeAttr;
    /** 大小映射, 提供回调的方式 */
    readonly size?: SizeAttr;
    /** 样式映射 */
    readonly style?: StyleAttr;
};
export interface GeometryOptions extends Options {
    /** geometry 类型 */
    readonly type: string;
    /** x 轴字段 */
    readonly xField?: string;
    /** y 轴字段 */
    readonly yField?: string;
    /** 分组字段 */
    readonly colorField?: string;
    /** shape 的映射字段 */
    readonly shapeField?: string;
    /** size 映射字段 */
    readonly sizeField?: string;
    /** style 的映射字段 */
    readonly styleField?: string;
    /** 图形映射规则 */
    readonly mapping: MappingOptions;
    /** geometry params */
    readonly args?: any;
}
/**
 * 获得映射的字段列表
 * @param options
 * @param field
 */
export declare function getMappingField(o: GeometryOptions, field: 'color' | 'shape' | 'size' | 'style'): string[];
/**
 * 获得映射函数
 * @param mappingFields
 * @param func
 */
export declare function getMappingFunction(mappingFields: string[], func: (datum: Datum) => any): (...args: any[]) => any;
/**
 * 通用 geometry 的配置处理的 adaptor
 * @param params
 */
export declare function geometry<O extends GeometryOptions>(params: Params<O>): Params<O>;
