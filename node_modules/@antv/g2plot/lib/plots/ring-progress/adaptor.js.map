{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/ring-progress/adaptor.ts"],"names":[],"mappings":";;;AACA,qCAAmC;AACnC,+CAA2E;AAC3E,+CAA+C;AAG/C;;;GAGG;AACH,SAAS,UAAU,CAAC,MAAmC;IAC7C,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,WAAW,GAAa,OAAO,YAApB,EAAE,MAAM,GAAK,OAAO,OAAZ,CAAa;IAExC,aAAa;IACb,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE;QACxB,WAAW,aAAA;QACX,MAAM,QAAA;KACP,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;GAGG;AACH,SAAS,SAAS,CAAC,MAAmC;IAC5C,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,SAAS,GAAc,OAAO,UAArB,EAAE,OAAO,GAAK,OAAO,QAAZ,CAAa;IAEvC,qCAAqC;IAC7B,IAAA,OAAO,GAAK,SAAS,QAAd,CAAe;IAE9B,IAAI,OAAO,EAAE;QACH,IAAA,KAAK,GAA0C,OAAO,MAAjD,EAAE,SAAS,GAA+B,OAAO,UAAtC,EAAE,OAAO,GAAsB,OAAO,QAA7B,EAAE,OAAO,GAAa,OAAO,QAApB,EAAE,MAAM,GAAK,OAAO,OAAZ,CAAa;QAC/D,KAAK,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC;YACtB,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;YACxB,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO;YACrD,KAAK,OAAA;YACL,OAAO,SAAA;YACP,OAAO,SAAA;YACP,MAAM,QAAA;SACP,CAAC,CAAC;KACJ;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,SAAgB,OAAO,CAAC,MAAmC;IACzD,OAAO,YAAI,CAAC,kBAAQ,EAAE,cAAK,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,kBAAS,EAAE,cAAK,EAAE,mBAAU,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AAClG,CAAC;AAFD,0BAEC","sourcesContent":["import { Params } from '../../core/adaptor';\nimport { flow } from '../../utils';\nimport { scale, animation, theme, annotation } from '../../adaptor/common';\nimport { geometry } from '../progress/adaptor';\nimport { RingProgressOptions } from './types';\n\n/**\n * coordinate 配置\n * @param params\n */\nfunction coordinate(params: Params<RingProgressOptions>): Params<RingProgressOptions> {\n  const { chart, options } = params;\n  const { innerRadius, radius } = options;\n\n  // coordinate\n  chart.coordinate('theta', {\n    innerRadius,\n    radius,\n  });\n\n  return params;\n}\n\n/**\n * statistic 配置\n * @param params\n */\nfunction statistic(params: Params<RingProgressOptions>): Params<RingProgressOptions> {\n  const { chart, options } = params;\n  const { statistic, percent } = options;\n\n  // 先不处理 title 了，mini 应该没有 title 的需求了。\n  const { content } = statistic;\n\n  if (content) {\n    const { style, formatter, offsetX, offsetY, rotate } = content;\n    chart.annotation().text({\n      position: ['50%', '50%'],\n      content: formatter ? formatter({ percent }) : percent,\n      style,\n      offsetX,\n      offsetY,\n      rotate,\n    });\n  }\n\n  return params;\n}\n\n/**\n * 环形进度图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RingProgressOptions>) {\n  return flow(geometry, scale({}), coordinate, statistic, animation, theme, annotation())(params);\n}\n"]}