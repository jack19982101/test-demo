{"version":3,"file":"circle.js","sourceRoot":"","sources":["../../../../src/plots/heatmap/shapes/circle.ts"],"names":[],"mappings":";;;AAAA,+BAAyC;AAIzC,kBAAa,CAAC,SAAS,EAAE,qBAAqB,EAAE;IAC9C,IAAI,EAAJ,UAAK,GAAc,EAAE,KAAa;QAChC,IAAM,EAAE,GAAG,GAAG,CAAC,CAAW,CAAC;QAC3B,IAAM,EAAE,GAAG,GAAG,CAAC,CAAW,CAAC;QAE3B,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;QAE9C,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,IAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,IAAM,MAAM,GAAG,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE1D,IAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACvC,KAAK,qBACH,CAAC,EAAE,EAAE,EACL,CAAC,EAAE,EAAE,EACL,CAAC,EAAE,MAAM,EACT,IAAI,EAAE,GAAG,CAAC,KAAK,IACZ,GAAG,CAAC,YAAY,CACpB;SACF,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { registerShape } from '@antv/g2';\nimport { ShapeInfo } from '@antv/g2/lib/interface';\nimport { IGroup } from '@antv/g2/lib/dependents';\n\nregisterShape('polygon', 'heatmap-circle-size', {\n  draw(cfg: ShapeInfo, group: IGroup) {\n    const cx = cfg.x as number;\n    const cy = cfg.y as number;\n\n    const points = this.parsePoints(cfg.points);\n    const width = Math.abs(points[2].x - points[1].x);\n    const height = Math.abs(points[1].y - points[0].y);\n    const maxRadius = Math.min(width, height) / 2;\n\n    const value = Number(cfg.shape[1]);\n    const sizeRatio = Number(cfg.shape[2]);\n    const radiusRatio = Math.sqrt(sizeRatio);\n    const radius = maxRadius * radiusRatio * Math.sqrt(value);\n\n    const polygon = group.addShape('circle', {\n      attrs: {\n        x: cx,\n        y: cy,\n        r: radius,\n        fill: cfg.color,\n        ...cfg.defaultStyle,\n      },\n    });\n    return polygon;\n  },\n});\n"]}