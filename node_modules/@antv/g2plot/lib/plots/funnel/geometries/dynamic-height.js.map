{"version":3,"file":"dynamic-height.js","sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/dynamic-height.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, map, reduce } from '@antv/util';\nimport { isFunction } from '@antv/util';\nimport { flow, findGeometry } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { FunnelAdaptorOptions } from '../types';\nimport { FUNNEL_PERCENT, FUNNEL_TOTAL_PERCENT } from '../constant';\n\n/**\n * 动态高度漏斗图\n * @param params\n * 需求: 每个漏斗项的高度根据 yfield 等比生成。漏斗上下宽度比为2，即斜率为 2。\n * 实现方式: 使用 g2 多边形，data -> 点坐标 -> 绘制\n * 以漏斗底部中心点为坐标轴原点，漏斗在 -0.5 <= x <= 0.5, 0 <= y <= 1 的正方形中绘制\n * 先计算第一象限的点, 第二象限的点即为镜像 x 轴取反。\n * 第一象限共需计算 data.length + 1 个点，在 y = 4x - 1 上。首尾分别是[0.5, 1], [0.25, 0]。根据 data 计算出 y 值，从而得到 y 值\n */\n\n/**\n * 处理数据\n * @param params\n */\nfunction format(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { options } = params;\n  const { data = [], yField } = options;\n\n  // 计算各数据项所占高度\n  const sum = reduce(\n    data,\n    (total, item) => {\n      return total + item[yField];\n    },\n    0\n  );\n\n  const formatData = map(data, (row, index) => {\n    // 储存四个点 x，y 坐标，方向为顺时针，即 [左上, 右上，右下，左下]\n    const x = [];\n    const y = [];\n\n    row[FUNNEL_TOTAL_PERCENT] = row[yField] / sum;\n\n    // 获取左上角，右上角坐标\n    if (index) {\n      const { _x: preItemX, _y: preItemY } = data[index - 1];\n      x[0] = preItemX[3];\n      y[0] = preItemY[3];\n      x[1] = preItemX[2];\n      y[1] = preItemY[2];\n    } else {\n      x[0] = -0.5;\n      y[0] = 1;\n      x[1] = 0.5;\n      y[1] = 1;\n    }\n\n    // 获取右下角坐标\n    y[2] = y[1] - row[FUNNEL_TOTAL_PERCENT];\n    x[2] = (y[2] + 1) / 4;\n    y[3] = y[2];\n    x[3] = -x[2];\n\n    // 赋值\n    row._x = x;\n    row._y = y;\n    row[FUNNEL_PERCENT] = row[yField] / data[0][yField];\n    return row;\n  });\n\n  return deepMix({}, params, {\n    options: {\n      formatData,\n    },\n  });\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { chart, options } = params;\n  const { formatData = [], xField, color } = options;\n\n  // 绘制漏斗图\n  chart.data(formatData);\n  chart.polygon().position('_x*_y').color(xField, color);\n\n  return params;\n}\n\nfunction label(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { chart, options } = params;\n  const { label, yField, xField } = options;\n\n  const geometry = findGeometry(chart, 'polygon');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [xField, yField, FUNNEL_PERCENT],\n      callback,\n      cfg,\n    });\n  }\n\n  return params;\n}\n\nfunction annotation(params: Params<FunnelAdaptorOptions>): Params<FunnelAdaptorOptions> {\n  const { chart, options } = params;\n  const { formatData = [], xField, yField, annotation } = options;\n\n  if (annotation !== false) {\n    formatData.forEach((obj) => {\n      chart.annotation().text({\n        top: true,\n        position: [obj[xField], 'median'],\n        content: isFunction(annotation) ? annotation(obj[xField], obj[yField], obj[FUNNEL_PERCENT], obj) : annotation,\n        style: {\n          stroke: null,\n          fill: '#fff',\n          textAlign: 'center',\n        },\n      });\n    });\n  }\n  return params;\n}\n\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function dynamicHeightFunnel(params: Params<FunnelAdaptorOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(format, geometry, label, annotation)(params);\n}\n"]}