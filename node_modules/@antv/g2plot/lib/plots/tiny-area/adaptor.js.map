{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/tiny-area/adaptor.ts"],"names":[],"mappings":";;;AAAA,mCAAqC;AACrC,+CAAoF;AAEpF,qCAAmC;AACnC,uDAA6D;AAG7D;;;GAGG;AACH,SAAS,QAAQ,CAAC,MAA+B;IACvC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,IAAI,GAA+D,OAAO,KAAtE,EAAE,KAAK,GAAwD,OAAO,MAA/D,EAAE,SAAS,GAA6C,OAAO,UAApD,EAAS,YAAY,GAAwB,OAAO,MAA/B,EAAQ,WAAW,GAAK,OAAO,KAAZ,CAAa;IAEnF,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,CAAS,EAAE,CAAS;QAC/C,OAAO,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAEvB,IAAM,CAAC,GAAG,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE;QAC5B,OAAO,EAAE;YACP,MAAM,EAAE,GAAG;YACX,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,EAAE,KAAK,OAAA,EAAE,KAAK,EAAE,SAAS,EAAE;YACjC,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,YAAY;SACpB;KACF,CAAC,CAAC;IACH,mBAAmB;IACnB,iBAAI,CAAC,CAAC,CAAC,CAAC;IACR,iBAAI,CAAC,CAAC,CAAC,CAAC;IACR,kBAAK,CAAC,CAAC,CAAC,CAAC;IAET,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAEpB,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,SAAgB,OAAO,CAAC,MAA+B;IACrD,OAAO,YAAI,CAAC,QAAQ,EAAE,cAAK,CAAC,EAAE,CAAC,EAAE,gBAAO,EAAE,cAAK,EAAE,kBAAS,EAAE,mBAAU,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AACpF,CAAC;AAFD,0BAEC","sourcesContent":["import { deepMix } from '@antv/util';\nimport { theme, scale, animation, annotation, tooltip } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { flow } from '../../utils';\nimport { area, line, point } from '../../adaptor/geometries';\nimport { TinyAreaOptions } from './types';\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<TinyAreaOptions>): Params<TinyAreaOptions> {\n  const { chart, options } = params;\n  const { data, color, areaStyle, point: pointOptions, line: lineOptions } = options;\n\n  const seriesData = data.map((y: number, x: number) => {\n    return { x, y };\n  });\n\n  chart.data(seriesData);\n\n  const p = deepMix({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      area: { color, style: areaStyle },\n      line: lineOptions,\n      point: pointOptions,\n    },\n  });\n  // area geometry 处理\n  area(p);\n  line(p);\n  point(p);\n\n  chart.axis(false);\n  chart.legend(false);\n\n  return params;\n}\n\n/**\n * 迷你面积图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TinyAreaOptions>) {\n  return flow(geometry, scale({}), tooltip, theme, animation, annotation())(params);\n}\n"]}