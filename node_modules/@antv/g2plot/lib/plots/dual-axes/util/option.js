"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOption = exports.getGeometryOption = exports.isColumn = exports.isLine = void 0;
var util_1 = require("@antv/util");
var types_1 = require("../types");
/**
 * 根据 GeometryOption 判断 geometry 是否为 line
 */
function isLine(geometryOption) {
    return geometryOption && geometryOption.geometry && geometryOption.geometry === types_1.DualAxesGeometry.Line;
}
exports.isLine = isLine;
/**
 * 根据 GeometryOption 判断 geometry 是否为 Column
 */
function isColumn(geometryOption) {
    return geometryOption && geometryOption.geometry && geometryOption.geometry === types_1.DualAxesGeometry.Column;
}
exports.isColumn = isColumn;
/**
 * 获取 GeometryOption
 * @param geometryOption
 * @param axis
 */
function getGeometryOption(geometryOption, axis) {
    // 柱子默认设置，柱子颜色使用 g2 设置
    if (isColumn(geometryOption)) {
        return util_1.deepMix({}, {
            geometry: types_1.DualAxesGeometry.Column,
            columnWidthRatio: 0.5,
        }, geometryOption);
    }
    // 线默认设置，默认为线，线颜色默认左蓝右红
    return util_1.deepMix({
        color: axis === types_1.AxisType.Left ? '#5B8FF9' : '#E76C5E',
    }, {
        geometry: types_1.DualAxesGeometry.Line,
        connectNulls: true,
        smooth: false,
    }, geometryOption || {});
}
exports.getGeometryOption = getGeometryOption;
/**
 * 获取 Option
 * @param options
 */
function getOption(options) {
    var _a = options.yAxis, yAxis = _a === void 0 ? [] : _a, _b = options.geometryOptions, geometryOptions = _b === void 0 ? [] : _b;
    var DEFAULT_YAXIS_CONFIG = {
        nice: true,
        label: {
            autoHide: true,
            autoRotate: false,
        },
    };
    var formatOptions = util_1.deepMix({}, options, {
        yAxis: [
            yAxis[0] !== false ? util_1.deepMix({}, DEFAULT_YAXIS_CONFIG, yAxis[0]) : false,
            yAxis[1] !== false ? util_1.deepMix({}, DEFAULT_YAXIS_CONFIG, yAxis[1]) : false,
        ],
        geometryOptions: [
            getGeometryOption(geometryOptions[0], types_1.AxisType.Left),
            getGeometryOption(geometryOptions[1], types_1.AxisType.Right),
        ],
    });
    return formatOptions;
}
exports.getOption = getOption;
//# sourceMappingURL=option.js.map