{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/dual-axes/adaptor.ts"],"names":[],"mappings":";;;AAAA,mCAA2D;AAE3D,+CAK8B;AAE9B,yCAAwC;AACxC,yCAAgD;AAChD,wCAA4D;AAC5D,wCAAmD;AACnD,4CAAqD;AAErD,uCAA6D;AAE7D;;;;;;GAMG;AACH,SAAgB,gBAAgB,CAAC,MAA+B;IAC9D,OAAO,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE;QACzB,OAAO,EAAE,kBAAS,CAAC,MAAM,CAAC,OAAO,CAAC;KACnC,CAAC,CAAC;AACL,CAAC;AAJD,4CAIC;AAED;;;GAGG;AACH,SAAS,QAAQ,CAAC,MAA+B;IACvC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,MAAM,GAAoC,OAAO,OAA3C,EAAE,MAAM,GAA4B,OAAO,OAAnC,EAAE,eAAe,GAAW,OAAO,gBAAlB,EAAE,IAAI,GAAK,OAAO,KAAZ,CAAa;IACnD,IAAA,mBAAmB,GAA0B,eAAe,GAAzC,EAAE,oBAAoB,GAAI,eAAe,GAAnB,CAAoB;IACpE,IAAI,QAAQ,EAAE,SAAS,CAAC;IAExB,kCAAkC;IAClC,IAAI,eAAM,CAAC,mBAAmB,CAAC,IAAI,iBAAQ,CAAC,oBAAoB,CAAC,EAAE;QACjE,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,0BAAe,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,yBAAc,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACnE;SAAM;QACL,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,yBAAc,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,0BAAe,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACrE;IAED,OAAO;IACP,6BAAkB,CAAC;QACjB,KAAK,EAAE,QAAQ;QACf,OAAO,EAAE;YACP,MAAM,QAAA;YACN,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;YACjB,cAAc,EAAE,mBAAmB;SACpC;KACF,CAAC,CAAC;IAEH,OAAO;IACP,6BAAkB,CAAC;QACjB,KAAK,EAAE,SAAS;QAChB,OAAO,EAAE;YACP,MAAM,QAAA;YACN,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;YACjB,cAAc,EAAE,oBAAoB;SACrC;KACF,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;GAGG;AACH,SAAgB,IAAI,CAAC,MAA+B;;IAC1C,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,KAAK,GAA4B,OAAO,MAAnC,EAAE,KAAK,GAAqB,OAAO,MAA5B,EAAE,MAAM,GAAa,OAAO,OAApB,EAAE,MAAM,GAAK,OAAO,OAAZ,CAAa;IAEjD,cAAK;QACH,GAAC,MAAM,IAAG,KAAK;QACf,GAAC,MAAM,CAAC,CAAC,CAAC,IAAG,KAAK,CAAC,CAAC,CAAC;YACrB,CAAC,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,mBAAY,CAAC,KAAK,EAAE,yBAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IAExE,cAAK;QACH,GAAC,MAAM,IAAG,KAAK;QACf,GAAC,MAAM,CAAC,CAAC,CAAC,IAAG,KAAK,CAAC,CAAC,CAAC;YACrB,CAAC,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,mBAAY,CAAC,KAAK,EAAE,0BAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IAEzE,OAAO,MAAM,CAAC;AAChB,CAAC;AAfD,oBAeC;AAED;;;GAGG;AACH,SAAgB,IAAI,CAAC,MAA+B;IAC1C,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAClC,IAAM,QAAQ,GAAG,mBAAY,CAAC,KAAK,EAAE,yBAAc,CAAC,CAAC;IACrD,IAAM,SAAS,GAAG,mBAAY,CAAC,KAAK,EAAE,0BAAe,CAAC,CAAC;IAC/C,IAAA,MAAM,GAAoB,OAAO,OAA3B,EAAE,MAAM,GAAY,OAAO,OAAnB,EAAE,KAAK,GAAK,OAAO,MAAZ,CAAa;IAEpC,IAAA,KAAK,GAAK,OAAO,MAAZ,CAAa;IAExB,OAAO;IACP,IAAI,KAAK,EAAE;QACT,KAAK,GAAG,cAAO,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;KACpD;IACD,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;QACZ,KAAK,CAAC,CAAC,CAAC,GAAG,cAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;KACxD;IAED,qBAAqB;IACrB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;QACZ,KAAK,CAAC,CAAC,CAAC,GAAG,cAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;KACrE;IAED,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC1B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC7B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAE7B,SAAS;IACT,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC7B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAEhC,QAAQ;IACR,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC9B,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACjC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAEpC,OAAO,MAAM,CAAC;AAChB,CAAC;AApCD,oBAoCC;AAED;;;GAGG;AACH,SAAgB,OAAO,CAAC,MAA+B;IAC7C,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,OAAO,GAAK,OAAO,QAAZ,CAAa;IAC5B,IAAM,QAAQ,GAAG,mBAAY,CAAC,KAAK,EAAE,yBAAc,CAAC,CAAC;IACrD,IAAM,SAAS,GAAG,mBAAY,CAAC,KAAK,EAAE,0BAAe,CAAC,CAAC;IACvD,IAAI,OAAO,KAAK,SAAS,EAAE;QACzB,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACvB,+DAA+D;QAC/D,2CAA2C;QAC3C,QAAQ,CAAC,OAAO,CAAC;YACf,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;QACH,SAAS,CAAC,OAAO,CAAC;YAChB,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;KACJ;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAjBD,0BAiBC;AAED;;;GAGG;AACH,SAAgB,WAAW,CAAC,MAA+B;IACjD,IAAA,KAAK,GAAK,MAAM,MAAX,CAAY;IAEzB,oBAAiB,CAAC,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,mBAAY,CAAC,KAAK,EAAE,yBAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACvF,oBAAiB,CAAC,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,mBAAY,CAAC,KAAK,EAAE,0BAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IAExF,OAAO,MAAM,CAAC;AAChB,CAAC;AAPD,kCAOC;AAED;;;GAGG;AACH,SAAgB,KAAK,CAAC,MAA+B;IAC3C,IAAA,KAAK,GAAK,MAAM,MAAX,CAAY;IAEzB,cAAW,CAAC,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,mBAAY,CAAC,KAAK,EAAE,yBAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACjF,cAAW,CAAC,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,mBAAY,CAAC,KAAK,EAAE,0BAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IAElF,OAAO,MAAM,CAAC;AAChB,CAAC;AAPD,sBAOC;AAED,SAAgB,SAAS,CAAC,MAA+B;IAC/C,IAAA,KAAK,GAAK,MAAM,MAAX,CAAY;IAEzB,kBAAe,CAAC,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,mBAAY,CAAC,KAAK,EAAE,yBAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACrF,kBAAe,CAAC,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,mBAAY,CAAC,KAAK,EAAE,0BAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IAEtF,OAAO,MAAM,CAAC;AAChB,CAAC;AAPD,8BAOC;AAED;;;;GAIG;AACH,SAAgB,MAAM,CAAC,MAA+B;IAC5C,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,MAAM,GAA8B,OAAO,OAArC,EAAE,eAAe,GAAa,OAAO,gBAApB,EAAE,MAAM,GAAK,OAAO,OAAZ,CAAa;IACpD,IAAM,QAAQ,GAAG,mBAAY,CAAC,KAAK,EAAE,yBAAc,CAAC,CAAC;IACrD,IAAM,SAAS,GAAG,mBAAY,CAAC,KAAK,EAAE,0BAAe,CAAC,CAAC;IAEvD,IAAI,MAAM,KAAK,KAAK,EAAE;QACpB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACrB;SAAM;QACL,uBAAuB;QACvB,4CAA4C;QAE5C,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE;YACtB,IAAM,SAAS,GAAG,2BAAkB,CAAC;gBACnC,IAAI,EAAE,QAAQ;gBACd,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC;gBAClC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;gBACjB,MAAM,QAAA;aACP,CAAC,CAAC;YAEH,IAAM,UAAU,GAAG,2BAAkB,CAAC;gBACpC,IAAI,EAAE,SAAS;gBACf,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC;gBAClC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;gBACjB,MAAM,QAAA;aACP,CAAC,CAAC;YAEH,KAAK,CAAC,MAAM,CACV,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE;gBAClB,MAAM,EAAE,IAAI;gBACZ,cAAc;gBACd,aAAa;gBACb,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC;aACpC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,aAAa;QACb,KAAK,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAC,GAAG;YAChC,IAAM,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC;YACjD,IAAI,cAAc,IAAI,cAAc,CAAC,IAAI,EAAE;gBACnC,IAAA,KAA+B,cAAc,CAAC,IAAI,EAAzC,OAAK,WAAA,EAAE,UAAU,gBAAwB,CAAC;gBACzD,uCAAuC;gBACvC,IAAI,UAAU,EAAE;oBACd,IAAM,GAAG,GAAG,gBAAS,CAAC,MAAM,EAAE,UAAC,EAAU,IAAK,OAAA,EAAE,KAAK,OAAK,EAAZ,CAAY,CAAC,CAAC;oBAC5D,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;wBACZ,IAAM,UAAU,GAAG,UAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC;wBACzD,WAAI,CAAC,UAAU,EAAE,UAAC,CAAC;4BACjB,CAAC,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAClD,CAAC,CAAC,CAAC;qBACJ;oBACD,OAAO;iBACR;gBAED,QAAQ;gBACR,WAAI,CAAC,KAAK,CAAC,KAAK,EAAE,UAAC,IAAI;oBACrB,OAAO;oBACP,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBACzC,WAAI,CAAC,UAAU,EAAE,UAAC,KAAY;wBAC5B,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,OAAK,CAAC,GAAG,CAAC,CAAC,EAAE;4BACpD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,UAAC,KAAK,IAAK,OAAA,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,IAAI,KAAK,KAAK,OAAK,EAAjD,CAAiD,CAAC,CAAC;yBACxF;oBACH,CAAC,CAAC,CAAC;oBACH,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;KACJ;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAtED,wBAsEC;AAED;;;;GAIG;AACH,SAAgB,OAAO,CAAC,MAA+B;IACrD,0BAA0B;IAC1B,OAAO,WAAI,CAAC,gBAAgB,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;AAC9G,CAAC;AAHD,0BAGC","sourcesContent":["import { deepMix, each, findIndex, get } from '@antv/util';\nimport { Scale } from '@antv/g2/lib/dependents';\nimport {\n  theme as commonTheme,\n  animation as commonAnimation,\n  scale,\n  interaction as commonInteraction,\n} from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { flow } from '../../utils/flow';\nimport { findViewById } from '../../utils/view';\nimport { getOption, isLine, isColumn } from './util/option';\nimport { getViewLegendItems } from './util/legend';\nimport { drawSingleGeometry } from './util/geometry';\nimport { DualAxesOptions } from './types';\nimport { LEFT_AXES_VIEW, RIGHT_AXES_VIEW } from './constant';\n\n/**\n * 获取默认参数设置\n * 双轴图无法使用公共的 getDefaultOption, 因为双轴图存在[lineConfig, lineConfig] 这样的数据，需要根据传入的 option，生成不同的 defaultOption,\n * 并且 deepmix 无法 mix 数组类型数据，因此需要做一次参数的后转换\n * 这个函数针对 yAxis 和 geometryOptions\n * @param params\n */\nexport function transformOptions(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  return deepMix({}, params, {\n    options: getOption(params.options),\n  });\n}\n\n/**\n * 绘制图形\n * @param params\n */\nfunction geometry(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { xField, yField, geometryOptions, data } = options;\n  const [leftGeometryOptions, rightGeometryOptions] = geometryOptions;\n  let leftView, rightView;\n\n  // 对于左线右柱的，将线的 view 放置在更上一层，防止线柱遮挡\n  if (isLine(leftGeometryOptions) && isColumn(rightGeometryOptions)) {\n    rightView = chart.createView({ id: RIGHT_AXES_VIEW }).data(data[1]);\n    leftView = chart.createView({ id: LEFT_AXES_VIEW }).data(data[0]);\n  } else {\n    leftView = chart.createView({ id: LEFT_AXES_VIEW }).data(data[0]);\n    rightView = chart.createView({ id: RIGHT_AXES_VIEW }).data(data[1]);\n  }\n\n  // 左轴图形\n  drawSingleGeometry({\n    chart: leftView,\n    options: {\n      xField,\n      yField: yField[0],\n      geometryOption: leftGeometryOptions,\n    },\n  });\n\n  // 右轴图形\n  drawSingleGeometry({\n    chart: rightView,\n    options: {\n      xField,\n      yField: yField[1],\n      geometryOption: rightGeometryOptions,\n    },\n  });\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  scale({\n    [xField]: xAxis,\n    [yField[0]]: yAxis[0],\n  })(deepMix({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n\n  scale({\n    [xField]: xAxis,\n    [yField[1]]: yAxis[1],\n  })(deepMix({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  const { xField, yField, yAxis } = options;\n\n  let { xAxis } = options;\n\n  // 固定位置\n  if (xAxis) {\n    xAxis = deepMix({}, xAxis, { position: 'bottom' });\n  }\n  if (yAxis[0]) {\n    yAxis[0] = deepMix({}, yAxis[0], { position: 'left' });\n  }\n\n  // 隐藏右轴 grid，留到 g2 解决\n  if (yAxis[1]) {\n    yAxis[1] = deepMix({}, yAxis[1], { position: 'right', grid: null });\n  }\n\n  chart.axis(xField, false);\n  chart.axis(yField[0], false);\n  chart.axis(yField[1], false);\n\n  // 左 View\n  leftView.axis(xField, xAxis);\n  leftView.axis(yField[0], yAxis[0]);\n  leftView.axis(yField[1], false);\n\n  // 右 Y 轴\n  rightView.axis(xField, false);\n  rightView.axis(yField[0], false);\n  rightView.axis(yField[1], yAxis[1]);\n\n  return params;\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  if (tooltip !== undefined) {\n    chart.tooltip(tooltip);\n    // 在 view 上添加 tooltip，使得 shared 和 interaction active-region 起作用\n    // view 应该继承 chart 里的 shared，但是从表现看来，继承有点问题\n    leftView.tooltip({\n      shared: true,\n    });\n    rightView.tooltip({\n      shared: true,\n    });\n  }\n  return params;\n}\n\n/**\n * interaction 配置\n * @param params\n */\nexport function interaction(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  commonInteraction(deepMix({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonInteraction(deepMix({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * theme\n * @param params\n */\nexport function theme(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  commonTheme(deepMix({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonTheme(deepMix({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\nexport function animation(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  commonAnimation(deepMix({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonAnimation(deepMix({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * legend 配置\n * 使用 custom，便于和类似于分组柱状图-单折线图的逻辑统一\n * @param params\n */\nexport function legend(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { legend, geometryOptions, yField } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n\n  if (legend === false) {\n    chart.legend(false);\n  } else {\n    // 存在单折线图或多折线图时，使用自定义图例\n    // let customItem = getLegendItems(chart, );\n\n    chart.on('beforepaint', () => {\n      const leftItems = getViewLegendItems({\n        view: leftView,\n        geometryOption: geometryOptions[0],\n        yField: yField[0],\n        legend,\n      });\n\n      const rightItems = getViewLegendItems({\n        view: rightView,\n        geometryOption: geometryOptions[1],\n        yField: yField[1],\n        legend,\n      });\n\n      chart.legend(\n        deepMix({}, legend, {\n          custom: true,\n          // todo 修改类型定义\n          // @ts-ignore\n          items: leftItems.concat(rightItems),\n        })\n      );\n    });\n\n    // // 自定义图例交互\n    chart.on('legend-item:click', (evt) => {\n      const delegateObject = evt.gEvent.delegateObject;\n      if (delegateObject && delegateObject.item) {\n        const { value: field, isGeometry } = delegateObject.item;\n        // geometry 的时候，直接使用 view.changeVisible\n        if (isGeometry) {\n          const idx = findIndex(yField, (yF: string) => yF === field);\n          if (idx > -1) {\n            const geometries = get(chart.views, [idx, 'geometries']);\n            each(geometries, (g) => {\n              g.changeVisible(!delegateObject.item.unchecked);\n            });\n          }\n          return;\n        }\n\n        // 分组柱线图\n        each(chart.views, (view) => {\n          // 单折柱图\n          const groupScale = view.getGroupScales();\n          each(groupScale, (scale: Scale) => {\n            if (scale.values && scale.values.indexOf(field) > -1) {\n              view.filter(scale.field, (value) => !delegateObject.item.unchecked || value !== field);\n            }\n          });\n          chart.render(true);\n        });\n      }\n    });\n  }\n\n  return params;\n}\n\n/**\n * 双折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(transformOptions, geometry, meta, axis, tooltip, interaction, theme, animation, legend)(params);\n}\n"]}