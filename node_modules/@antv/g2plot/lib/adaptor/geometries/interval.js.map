{"version":3,"file":"interval.js","sourceRoot":"","sources":["../../../src/adaptor/geometries/interval.ts"],"names":[],"mappings":";;;;AACA,mCAA4C;AAE5C,+BAAmE;AAqBnE;;;GAGG;AACH,SAAS,YAAY,CAAoC,MAAiB;IAChE,IAAA,KAAK,GAAmB,MAAM,MAAzB,EAAE,OAAO,GAAU,MAAM,QAAhB,EAAE,GAAG,GAAK,MAAM,IAAX,CAAY;IAC/B,IAAA,WAAW,GAAgD,OAAO,YAAvD,EAAE,OAAO,GAAuC,OAAO,QAA9C,EAAE,OAAO,GAA8B,OAAO,QAArC,EAAE,WAAW,GAAiB,OAAO,YAAxB,EAAE,UAAU,GAAK,OAAO,WAAZ,CAAa;IAE3E,IAAM,CAAC,GAAG,GAAG,CAAC,QAAoB,CAAC;IACnC;;OAEG;IACH,IAAI,WAAW,EAAE;QACf,QAAQ;QACR,IAAI,OAAO,EAAE;YACX,CAAC,CAAC,MAAM,CAAC;gBACP,IAAI,EAAE,OAAO;gBACb,WAAW,aAAA;aACZ,CAAC,CAAC;SACJ;aAAM,IAAI,OAAO,EAAE;YAClB,QAAQ;YACR,CAAC,CAAC,MAAM,CAAC;gBACP,IAAI,EAAE,OAAO;gBACb,WAAW,aAAA;aACZ,CAAC,CAAC;SACJ;KACF;IAED,aAAa;IACb,IAAI,CAAC,YAAK,CAAC,UAAU,CAAC,EAAE;QACtB,KAAK,CAAC,KAAK,CAAC;YACV,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CAAC;KACJ;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAgB,QAAQ,CAAoC,MAAiB;IACnE,IAAA,OAAO,GAAK,MAAM,QAAX,CAAY;IACnB,IAAA,QAAQ,GAAkB,OAAO,SAAzB,EAAE,WAAW,GAAK,OAAO,YAAZ,CAAa;IAE1C,sBAAsB;IACd,IAAA,GAAG,GAAK,CAAA,QAAQ;QACtB,CAAC,CAAC,eAAQ,CACN,cAAO,CAAC,EAAE,EAAE,MAAM,EAAE;YAClB,OAAO,EAAE;gBACP,IAAI,EAAE,UAAU;gBAChB,UAAU,EAAE,WAAW;gBACvB,OAAO,EAAE,QAAQ;aAClB;SACF,CAAC,CACH;QACH,CAAC,CAAC,MAAM,CAAA,IAVC,CAUA;IAEX,OAAO,YAAY,uCACd,MAAM,KACT,GAAG,KAAA,IACH,CAAC;AACL,CAAC;AArBD,4BAqBC","sourcesContent":["import { Geometry } from '@antv/g2';\nimport { deepMix, isNil } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { GeometryOptions, MappingOptions, geometry } from './base';\n\nexport interface IntervalGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField: string;\n  /** y 轴字段 */\n  readonly yField: string;\n  /** 拆分字段，在分组柱状图下同 groupField、colorField，在堆积柱状图下同 stackField、colorField  */\n  readonly seriesField?: string;\n  /** 是否分组柱形图 */\n  readonly isGroup?: boolean;\n  /** 是否堆积柱状图 */\n  readonly isStack?: boolean;\n  /** 柱状图宽度占比 [0-1] */\n  readonly widthRatio?: number;\n  /** 分组中柱子之间的间距 [0-1]，仅对分组柱状图适用 */\n  readonly marginRatio?: number;\n  /** 柱子样式配置 */\n  readonly interval?: MappingOptions;\n}\n\n/**\n * 柱形图其他的 adaptor\n * @param params\n */\nfunction otherAdaptor<O extends IntervalGeometryOptions>(params: Params<O>): Params<O> {\n  const { chart, options, ext } = params;\n  const { seriesField, isGroup, isStack, marginRatio, widthRatio } = options;\n\n  const g = ext.geometry as Geometry;\n  /**\n   * adjust\n   */\n  if (seriesField) {\n    // group\n    if (isGroup) {\n      g.adjust({\n        type: 'dodge',\n        marginRatio,\n      });\n    } else if (isStack) {\n      // stack\n      g.adjust({\n        type: 'stack',\n        marginRatio,\n      });\n    }\n  }\n\n  // widthRatio\n  if (!isNil(widthRatio)) {\n    chart.theme({\n      columnWidthRatio: widthRatio,\n    });\n  }\n\n  return params;\n}\n\nexport function interval<O extends IntervalGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const { interval, seriesField } = options;\n\n  // 保障一定要存在 interval 映射\n  const { ext } = interval\n    ? geometry(\n        deepMix({}, params, {\n          options: {\n            type: 'interval',\n            colorField: seriesField,\n            mapping: interval,\n          },\n        })\n      )\n    : params;\n\n  return otherAdaptor({\n    ...params,\n    ext,\n  });\n}\n"]}