{"version":3,"file":"interval.js","sourceRoot":"","sources":["../../../src/geometry/label/interval.ts"],"names":[],"mappings":"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","sourcesContent":["import { get, deepMix } from '@antv/util';\n\nimport { MappingDatum, Point } from '../../interface';\nimport GeometryLabel from './base';\nimport { LabelCfg, LabelPointCfg } from './interface';\n\n/**\n * 柱状图 label\n */\nexport default class IntervalLabel extends GeometryLabel {\n  /**\n   * 获取 interval label 的方向，取决于 value 的值是正还是负\n   * @param labelCfg\n   */\n  private getLabelValueDir(mappingData: MappingDatum) {\n    // points 中的 x/y 和 transpose 无关\n    const dim = 'y';\n    const { points } = mappingData;\n\n    return points[0][dim] < points[2][dim] ? 1 : -1;\n  }\n\n  /**\n   * 重载：根据 interval 值的正负来调整 label 偏移量\n   * @param labelCfg\n   * @param index\n   * @param total\n   */\n  protected getLabelOffset(labelCfg: LabelCfg, index: number, total: number) {\n    const point = super.getLabelOffset(labelCfg, index, total);\n    const transposed = this.getCoordinate().isTransposed;\n    const dim = transposed ? 'x' : 'y';\n    const dir = this.getLabelValueDir(labelCfg.mappingData);\n\n    point[dim] *= dir;\n\n    return point;\n  }\n\n  /**\n   * 重载：定制 interval label 的默认主题配置\n   * @param labelCfg\n   */\n  protected getThemedLabelCfg(labelCfg: LabelCfg) {\n    const geometry = this.geometry;\n    const defaultLabelCfg = this.getDefaultLabelCfg();\n    const { theme } = geometry;\n\n    // 如果 interval label position 设置为 middle，则将主题中的 offset 覆盖为 0\n    return deepMix({}, defaultLabelCfg, theme.labels, labelCfg.position === 'middle' ? { offset: 0 } : {}, labelCfg);\n  }\n\n  protected setLabelPosition(labelPointCfg: LabelPointCfg, mappingData: MappingDatum, index: number, position: string) {\n    const coordinate = this.getCoordinate();\n    const transposed = coordinate.isTransposed;\n    const shapePoints = mappingData.points as Point[];\n    const point0 = coordinate.convert(shapePoints[0]);\n    const point1 = coordinate.convert(shapePoints[2]);\n    const flag = transposed ? -1 : 1;\n    const width = ((point0.x - point1.x) / 2) * flag;\n    const height = ((point0.y - point1.y) / 2) * flag;\n    const dir = this.getLabelValueDir(mappingData);\n\n    switch (position) {\n      case 'right':\n        if (!transposed) {\n          labelPointCfg.x -= width;\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', dir > 0 ? 'left' : 'right');\n        break;\n      case 'left':\n        if (transposed) {\n          labelPointCfg.x -= width * 2;\n        } else {\n          labelPointCfg.x += width;\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', dir > 0 ? 'left' : 'right');\n        break;\n      case 'bottom':\n        if (transposed) {\n          labelPointCfg.x -= width;\n          labelPointCfg.y -= height;\n        } else {\n          labelPointCfg.y += height * 2;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', dir > 0 ? 'bottom' : 'top');\n        break;\n      case 'middle':\n        if (transposed) {\n          labelPointCfg.x -= width;\n        } else {\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'middle');\n        break;\n      case 'top':\n        if (transposed) {\n          labelPointCfg.x -= width;\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', dir > 0 ? 'bottom' : 'top');\n        break;\n      default:\n        break;\n    }\n  }\n}\n"]}