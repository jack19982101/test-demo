{"version":3,"file":"adjust-color.js","sourceRoot":"","sources":["../../../../src/geometry/label/layout/adjust-color.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC1C,OAAO,EAAE,oBAAoB,EAAE,MAAM,qBAAqB,CAAC;AAI3D,MAAM,UAAU,WAAW,CAAC,KAAkB,EAAE,MAAgB,EAAE,MAA2B;IAC3F,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;QACvB,OAAO;KACR;IACD,IAAM,OAAO,GAAY,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAClD,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC/B,IAAA,KAAoC,KAAK,CAAC,MAAM,IAAI,EAAE,EAApD,cAAc,oBAAA,EAAE,aAAa,mBAAuB,CAAC;IAE7D,MAAM,CAAC,OAAO,CAAC,UAAC,KAAsB,EAAE,KAAa;QACnD,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,UAAC,EAAE,IAAK,OAAA,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM,EAAzB,CAAyB,CAAC,CAAC;QAChE,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACnD,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;QAE5D,eAAe;QACf,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAChC,IAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnC,IAAM,SAAS,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAChD,IAAI,SAAS,EAAE;gBACb,IAAI,cAAc,EAAE;oBAClB,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;iBACxC;aACF;iBAAM;gBACL,IAAI,aAAa,EAAE;oBACjB,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;iBACvC;aACF;SACF;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { IGroup, IShape } from '../../../dependents';\nimport { BBox } from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nimport Element from '../../element';\nimport { LabelItem } from '../interface';\n\nexport function adjustColor(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[]) {\n  if (shapes.length === 0) {\n    return;\n  }\n  const element: Element = shapes[0].get('element');\n  const theme = element.geometry.theme;\n  const { fillColorLight, fillColorDark } = theme.labels || {};\n\n  shapes.forEach((shape: IShape | IGroup, index: number) => {\n    const label = labels[index];\n    const textShape = label.find((el) => el.get('type') === 'text');\n    const shapeBBox = BBox.fromObject(shape.getBBox());\n    const textBBox = BBox.fromObject(textShape.getCanvasBBox());\n\n    // 如果文本包围图在图形内部\n    if (shapeBBox.contains(textBBox)) {\n      const bgColor = shape.attr('fill');\n      const fillWhite = isContrastColorWhite(bgColor);\n      if (fillWhite) {\n        if (fillColorLight) {\n          textShape.attr('fill', fillColorLight);\n        }\n      } else {\n        if (fillColorDark) {\n          textShape.attr('fill', fillColorDark);\n        }\n      }\n    }\n  });\n}\n"]}